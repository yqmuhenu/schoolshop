2019-09-11 15:19:45.419[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.updateProductCategoryToNull] use[master] Strategy,SqlCommanType[UPDATE]...
2019-09-11 15:19:45.419[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：master
2019-09-11 15:19:45.429[main] DEBUG c.igeek.dao.ProductDao.updateProductCategoryToNull - ==>  Preparing: UPDATE tb_product SET product_category_id = NULL WHERE product_category_id = ?; 
2019-09-11 15:19:45.449[main] DEBUG c.igeek.dao.ProductDao.updateProductCategoryToNull - ==> Parameters: 3(Long)
2019-09-11 15:19:45.449[main] DEBUG c.igeek.dao.ProductDao.updateProductCategoryToNull - <==    Updates: 1
2019-09-11 15:25:19.613[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.updateProductCategoryToNull] use[master] Strategy,SqlCommanType[UPDATE]...
2019-09-11 15:25:19.613[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：master
2019-09-11 15:25:19.633[main] DEBUG c.igeek.dao.ProductDao.updateProductCategoryToNull - ==>  Preparing: UPDATE tb_product SET product_category_id = NULL WHERE product_category_id = ?; 
2019-09-11 15:25:19.653[main] DEBUG c.igeek.dao.ProductDao.updateProductCategoryToNull - ==> Parameters: 3(Long)
2019-09-11 15:25:19.653[main] DEBUG c.igeek.dao.ProductDao.updateProductCategoryToNull - <==    Updates: 0
2019-09-11 20:23:05.719[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductCount] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:23:05.719[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:23:05.729[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE enable_status != -1 
2019-09-11 20:23:05.779[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==> Parameters: 
2019-09-11 20:23:05.799[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - <==      Total: 1
2019-09-11 20:24:04.847[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductCount] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:24:04.857[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:24:04.877[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE enable_status != -1 
2019-09-11 20:24:04.938[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==> Parameters: 
2019-09-11 20:24:04.958[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - <==      Total: 1
2019-09-11 20:24:04.968[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductCount] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:24:04.968[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:24:04.968[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE enable_status != -1 and product_name like '%测试%' 
2019-09-11 20:24:04.968[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==> Parameters: 
2019-09-11 20:24:04.980[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - <==      Total: 1
2019-09-11 20:24:04.980[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductCount] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:24:04.980[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:24:04.980[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE enable_status != -1 shop_id = ? and product_name like '%测试%' 
2019-09-11 20:24:04.980[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==> Parameters: 14(Long)
2019-09-11 20:25:49.536[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductCount] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:25:49.536[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:25:49.556[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE enable_status != -1 
2019-09-11 20:25:49.605[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==> Parameters: 
2019-09-11 20:25:49.625[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - <==      Total: 1
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductCount] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE enable_status != -1 and product_name like '%测试%' 
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==> Parameters: 
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - <==      Total: 1
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductCount] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==>  Preparing: SELECT count(1) FROM tb_product WHERE enable_status != -1 AND shop_id = ? and product_name like '%测试%' 
2019-09-11 20:25:49.635[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - ==> Parameters: 14(Long)
2019-09-11 20:25:49.645[main] DEBUG com.igeek.dao.ProductDao.queryProductCount - <==      Total: 1
2019-09-11 20:26:42.214[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductList] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:26:42.214[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:26:42.234[main] DEBUG com.igeek.dao.ProductDao.queryProductList - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pc.product_category_id, pc.product_category_name FROM tb_product AS p LEFT JOIN tb_product_category AS pc ON p.product_category_id = pc.product_category_id WHERE p.enable_status != -1 ORDER BY priority DESC LIMIT ? OFFSET ?; 
2019-09-11 20:26:42.284[main] DEBUG com.igeek.dao.ProductDao.queryProductList - ==> Parameters: 3(Integer), 0(Integer)
2019-09-11 20:26:42.317[main] DEBUG com.igeek.dao.ProductDao.queryProductList - <==      Total: 3
2019-09-11 20:26:42.327[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductList] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:26:42.327[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:26:42.327[main] DEBUG com.igeek.dao.ProductDao.queryProductList - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pc.product_category_id, pc.product_category_name FROM tb_product AS p LEFT JOIN tb_product_category AS pc ON p.product_category_id = pc.product_category_id WHERE p.enable_status != -1 and p.product_name like '%测试%' ORDER BY priority DESC LIMIT ? OFFSET ?; 
2019-09-11 20:26:42.327[main] DEBUG com.igeek.dao.ProductDao.queryProductList - ==> Parameters: 7(Integer), 0(Integer)
2019-09-11 20:26:42.337[main] DEBUG com.igeek.dao.ProductDao.queryProductList - <==      Total: 6
2019-09-11 20:26:42.337[main] DEBUG com.igeek.dao.split.DynamicDataSourceInterceptor - 设置方法[com.igeek.dao.ProductDao.queryProductList] use[slave] Strategy,SqlCommanType[SELECT]...
2019-09-11 20:26:42.337[main] DEBUG com.igeek.dao.split.DynamicDataSourceHolder - 所使用的数据源为：slave
2019-09-11 20:26:42.337[main] DEBUG com.igeek.dao.ProductDao.queryProductList - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pc.product_category_id, pc.product_category_name FROM tb_product AS p LEFT JOIN tb_product_category AS pc ON p.product_category_id = pc.product_category_id WHERE p.enable_status != -1 AND p.shop_id = ? AND p.shop_id = ? and p.product_name like '%测试%' ORDER BY priority DESC LIMIT ? OFFSET ?; 
2019-09-11 20:26:42.337[main] DEBUG com.igeek.dao.ProductDao.queryProductList - ==> Parameters: 14(Long), 14(Long), 3(Integer), 0(Integer)
2019-09-11 20:26:42.337[main] DEBUG com.igeek.dao.ProductDao.queryProductList - <==      Total: 1
